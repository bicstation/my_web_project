services:
  nginx:
    build: ./nginx
    container_name: nginx_container
    ports:
      - "80:80"
      - "443:443" # HTTPSポートも公開
    volumes:
      - .:/var/www/html # プロジェクトルート全体をコンテナの /var/www/html にマウント
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro # ★追加: Certbot証明書を読み取り専用でマウント
    depends_on:
      php:
        condition: service_healthy # PHPサービスが健全な状態になるまで待機
      mysql:
        condition: service_healthy # MySQLサービスが健全な状態になるまで待機 (念のため直接依存も追加)
      phpmyadmin:
        condition: service_started # phpmyadminは起動していればOK
      blog_wordpress_service:
        condition: service_started # WordPressも起動していればOK
    networks:
      - app-network

  php:
    build: ./php
    volumes:
      - .:/var/www/html
      # ホストのユーザーIDとグループIDでPHPプロセスを実行
      - ./logs:/var/www/html/logs
      # .env ファイルに CURRENT_UID と CURRENT_GID を設定してください
      - ./php.ini:/usr/local/etc/php/php.ini # ★この行に修正！★
      # ホストのユーザーIDとグループIDでPHPプロセスを実行
    user: "${CURRENT_UID}:${CURRENT_GID}"
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: tiper
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PASS: ${DB_PASSWORD} # アプリケーションコードでどちらを参照しているか確認し、不要ならDB_PASSWORDを残して削除しても良い
      DUGA_API_KEY: ${DUGA_API_KEY}
      DUGA_API_URL: ${DUGA_API_URL}
      ADMIN_DEFAULT_PASSWORD: ${ADMIN_DEFAULT_PASSWORD} # ★ここを追加しました
      TZ: Asia/Tokyo
    networks:
      - app-network
    depends_on: # PHPがMySQLに依存するように変更
      mysql:
        condition: service_healthy # MySQLが完全に準備できるまで待機
    healthcheck: # PHP-FPMが正常に動作しているかチェック
      test: ["CMD", "php", "-m"] # php-fpmが起動していることを確認する簡易的なテスト
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: my_web_project-mysql-1
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # ここを修正します。Tiper.Liveアプリケーションが期待するDB名、ユーザー、パスワードを直接指定します。
      MYSQL_DATABASE: ${DB_NAME}         # Tiper.LiveアプリのDB名を参照
      MYSQL_USER: ${DB_USER}             # Tiper.Liveアプリのユーザー名を参照
      MYSQL_PASSWORD: ${DB_PASSWORD}     # Tiper.Liveアプリのパスワードを参照
      TZ: Asia/Tokyo
    volumes:
      - mysql_data:/var/lib/mysql
      - ./app/database:/docker-entrypoint-initdb.d # ★修正: MySQL起動時にSQLスクリプトを実行する標準パス
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck: # ★ここを追加: MySQLが接続可能かチェック
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s # 初回起動時にMySQLが立ち上がるまでの猶予期間

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Tokyo
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy # phpmyadminもMySQLの健全性を待機
    networks:
      - app-network

  blog_wordpress_service:
    image: wordpress:latest
    container_name: wordpress_blog_container
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER} # WordPressのDBユーザーを参照
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD} # WordPressのDBパスワードを参照
      WORDPRESS_DEBUG: 1
      TZ: Asia/Tokyo
    volumes:
      - ./wordpress_blog:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy # WordPressもMySQLの健全性を待機
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: