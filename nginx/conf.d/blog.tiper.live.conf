# C:\project\my_web_project\nginx\conf.d\blog.tiper.live.conf

# HTTP (ポート80) の設定 - HTTPSへのリダイレクト
server {
    listen 80;
    server_name blog.tiper.live; # blog.tiper.live ドメインのみを指定

    # CertbotのチャレンジファイルをHTTPで直接提供するための設定 - これを最優先で配置
    # WordPressの公開ディレクトリに直接ファイルを置くので、そのrootを設定
    location /.well-known/acme-challenge/ {
        root /var/www/html/wordpress_blog; # WordPressブログの公開ディレクトリ
        try_files $uri =404; # ファイルが見つからない場合は404を返す
    }

    # WordPressのURL書き換えルール
    # WordPressのデフォルトルートにリダイレクトする
    location / {
        return 301 https://$host$request_uri; # HTTPSにリダイレクト
    }
}

# HTTPS (ポート443) の設定
server {
    listen 443 ssl;
    http2 on;
    server_name blog.tiper.live; # blog.tiper.live ドメインのみを指定

    ssl_certificate /etc/letsencrypt/live/tiper.live/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tiper.live/privkey.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256";
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    root /var/www/html/wordpress_blog; # WordPressのルートディレクトリ
    index index.php index.html index.htm;

    # CertbotのチャレンジファイルをHTTPSで直接提供するための設定 - これを最優先で配置
    location /.well-known/acme-challenge/ {
        root /var/www/html/wordpress_blog; # WordPressブログの公開ディレクトリ
        try_files $uri =404;
    }

    location / {
        # WordPressのURL書き換えルール
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_pass blog_wordpress_service:9000; # WordPress PHP-FPMサービス
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $request_filename;
        include fastcgi_params;
    }

    location ~* \.(css|js|gif|jpe?g|png)$ {
        expires 1M;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404; # 静的ファイルが見つからない場合は404
    }
}
